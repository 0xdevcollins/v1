name: Deploy to Contabo VPS

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "Starting deployment..."
            
            # Create deployment directory if it doesn't exist
            DEPLOY_DIR="/home/${{ secrets.SERVER_USER }}/public_html"
            mkdir -p $DEPLOY_DIR
            cd $DEPLOY_DIR

            # Check available disk space
            echo "Checking disk space..."
            df -h .
            
            # Check and clean npm cache if needed
            echo "Cleaning npm cache..."
            npm cache clean --force
            
            # Remove existing node_modules to prevent conflicts
            echo "Removing existing node_modules..."
            rm -rf node_modules

            # Clone or pull repository
            if [ ! -d ".git" ]; then
                echo "Initializing new repository..."
                git init
                git remote add origin https://x-access-token:${{ secrets.SECRET_PAT }}@github.com/gridape/v1.git
                git fetch origin main
                git checkout -f main
            else
                echo "Updating existing repository..."
                git fetch origin main
                git reset --hard origin/main
            fi

            # Backup existing .next directory
            if [ -d ".next" ]; then
                echo "Backing up .next directory..."
                mv .next .next-backup
            fi

            # Install dependencies with increased memory limit and verbose logging
            echo "Installing dependencies..."
            export NODE_OPTIONS="--max_old_space_size=4096"
            npm ci --verbose || {
                echo "Dependency installation failed. Retrying with clean install..."
                rm -rf node_modules package-lock.json
                npm install
            }

            # Build application
            echo "Building application..."
            npm run build || { 
                echo "Build failed. Restoring backup..."
                if [ -d ".next-backup" ]; then
                    rm -rf .next
                    mv .next-backup .next
                fi
                exit 1
            }

            # Clean up backup
            rm -rf .next-backup

            # Install PM2 globally if not present
            if ! command -v pm2 &> /dev/null; then
                echo "Installing PM2..."
                npm install -g pm2
            fi

            # Update PM2 process
            if pm2 list | grep -q "v1"; then
                echo "Restarting PM2 process..."
                pm2 reload v1 --update-env
            else
                echo "Starting new PM2 process..."
                pm2 start npm --name "v1" -- start
            fi

            # Save PM2 process list
            pm2 save

            echo "Deployment completed successfully."
