on:
  push:
    branches: [main]
name: ðŸš€ Deploy Next.js AppRouter Website

jobs:
  web-deploy:
    name: ðŸŽ‰ Deploy Next.js App
    runs-on: ubuntu-latest
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: ðŸ”¨ Install and Build Project
        run: |
          yarn install
          yarn build

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

          - name: ðŸ“‚ Deploy via SSH
          uses: appleboy/ssh-action@v0.1.7
          with:
            host: ${{ secrets.SERVER_HOST }}
            username: ${{ secrets.SERVER_USER }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            port: 22
            script: |
              # Ensure Node.js is installed
              if ! command -v node &> /dev/null; then
                echo "Installing Node.js..."
                sudo apt update && sudo apt install -y nodejs npm
              fi
        
              # Install yarn if missing
              if ! command -v yarn &> /dev/null; then
                echo "Installing Yarn..."
                npm install -g yarn
              fi
        
              # Install PM2 if missing
              if ! command -v pm2 &> /dev/null; then
                echo "Installing PM2..."
                npm install -g pm2
              fi
        
              # Set up project directory
              PROJECT_DIR="/home/${{ secrets.SERVER_USER }}/public_html"
              if [ ! -d "$PROJECT_DIR" ]; then
                echo "Project directory not found. Cloning repository..."
                git clone ${{ secrets.REPO_URL }} $PROJECT_DIR
              fi
              cd $PROJECT_DIR
        
              # Pull latest code
              git fetch origin
              git reset --hard origin/main
        
              # Install dependencies and build
              yarn install --production
              yarn build
        
              # Restart with PM2
              pm2 delete all || true
              pm2 start "yarn dev" --name "next-app"
        
              # Save PM2 processes
              pm2 save
        